function Board.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push this 0
push this 0
call Array2D.new 2
pop this 4
push constant 20
pop this 2
push constant 10
pop this 3
push constant 256
push constant 2
push this 3
call Math.multiply 2
sub
push this 0
call Math.divide 2
pop this 1
push constant 0
pop this 5
push constant 0
pop this 6
push pointer 0
call Board.setDirections 1
pop temp 0
push pointer 0
call Board.initilize 1
pop temp 0
push pointer 0
call Board.draw 1
pop temp 0
push pointer 0
return
function Board.initilize 1
push argument 0
pop pointer 0
push this 0
push constant 2
call Math.divide 2
push constant 1
sub
pop local 0
push this 4
push local 0
push local 0
push constant 0
call Array2D.set 4
pop temp 0
push this 4
push local 0
push local 0
push constant 1
add
push constant 1
call Array2D.set 4
pop temp 0
push this 4
push local 0
push constant 1
add
push local 0
push constant 1
call Array2D.set 4
pop temp 0
push this 4
push local 0
push constant 1
add
push local 0
push constant 1
add
push constant 0
call Array2D.set 4
pop temp 0
push constant 0
return
function Board.setDirections 0
push argument 0
pop pointer 0
push constant 2
push constant 8
call Array2D.new 2
pop this 7
push this 7
push constant 0
push constant 0
push constant 0
call Array2D.set 4
pop temp 0
push this 7
push constant 0
push constant 1
push constant 1
neg
call Array2D.set 4
pop temp 0
push this 7
push constant 1
push constant 0
push constant 0
call Array2D.set 4
pop temp 0
push this 7
push constant 1
push constant 1
push constant 1
call Array2D.set 4
pop temp 0
push this 7
push constant 2
push constant 0
push constant 1
neg
call Array2D.set 4
pop temp 0
push this 7
push constant 2
push constant 1
push constant 0
call Array2D.set 4
pop temp 0
push this 7
push constant 3
push constant 0
push constant 1
call Array2D.set 4
pop temp 0
push this 7
push constant 3
push constant 1
push constant 0
call Array2D.set 4
pop temp 0
push this 7
push constant 4
push constant 0
push constant 1
neg
call Array2D.set 4
pop temp 0
push this 7
push constant 4
push constant 1
push constant 1
neg
call Array2D.set 4
pop temp 0
push this 7
push constant 5
push constant 0
push constant 1
call Array2D.set 4
pop temp 0
push this 7
push constant 5
push constant 1
push constant 1
neg
call Array2D.set 4
pop temp 0
push this 7
push constant 6
push constant 0
push constant 1
neg
call Array2D.set 4
pop temp 0
push this 7
push constant 6
push constant 1
push constant 1
call Array2D.set 4
pop temp 0
push this 7
push constant 7
push constant 0
push constant 1
call Array2D.set 4
pop temp 0
push this 7
push constant 7
push constant 1
push constant 1
call Array2D.set 4
pop temp 0
push constant 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push this 4
call Array2D.dispose 1
pop temp 0
push this 7
call Array2D.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.moveBox 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
not
call Board.drawBox 2
pop temp 0
push argument 1
push constant 1
eq
push this 5
push constant 0
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
push constant 1
sub
pop this 5
label IF_FALSE0
push argument 1
push constant 2
eq
push this 5
push this 0
push constant 1
sub
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
push constant 1
add
pop this 5
label IF_FALSE1
push argument 1
push constant 3
eq
push this 6
push constant 0
gt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 6
push constant 1
sub
pop this 6
label IF_FALSE2
push argument 1
push constant 4
eq
push this 6
push this 0
push constant 1
sub
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 6
push constant 1
add
pop this 6
label IF_FALSE3
push pointer 0
push constant 0
call Board.drawBox 2
pop temp 0
push constant 0
return
function Board.getOtherTile 0
push argument 0
pop pointer 0
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push constant 1
return
label IF_END0
function Board.selectCell 0
push argument 0
pop pointer 0
push this 4
push this 5
push this 6
call Array2D.get 3
push constant 1
neg
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
push this 5
push this 6
push argument 1
call Board.update 4
pop temp 0
push pointer 0
call Board.erase 1
pop temp 0
push pointer 0
call Board.draw 1
pop temp 0
push constant 0
not
return
function Board.update 1
push argument 0
pop pointer 0
push pointer 0
push argument 3
call Board.getOtherTile 2
pop local 0
push this 4
push argument 1
push argument 2
push argument 3
call Array2D.set 4
pop temp 0
push pointer 0
push argument 1
push argument 2
push argument 3
push local 0
call Board.flipTiles 5
pop temp 0
push constant 0
return
function Board.onBoard 0
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
not
push argument 1
push this 0
lt
and
push argument 2
push constant 0
lt
not
and
push argument 2
push this 0
lt
and
return
function Board.flipTiles 8
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8
eq
not
not
if-goto WHILE_END0
push this 7
push local 0
push constant 0
call Array2D.get 3
pop local 3
push this 7
push local 0
push constant 1
call Array2D.get 3
pop local 4
push argument 1
push local 3
add
pop local 1
push argument 2
push local 4
add
pop local 2
push constant 0
pop local 6
push constant 0
pop local 7
push constant 0
pop local 5
label WHILE_EXP1
push local 7
not
push pointer 0
push local 1
push local 2
call Board.onBoard 3
and
not
if-goto WHILE_END1
push this 4
push local 1
push local 2
call Array2D.get 3
push argument 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 5
push constant 1
add
pop local 5
push local 1
push local 3
add
pop local 1
push local 2
push local 4
add
pop local 2
label IF_FALSE0
push pointer 0
push local 1
push local 2
call Board.onBoard 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push local 1
push local 2
call Array2D.get 3
push constant 1
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 7
label IF_FALSE2
push this 4
push local 1
push local 2
call Array2D.get 3
push argument 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 7
push local 5
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 6
label IF_FALSE4
label IF_FALSE3
label IF_FALSE1
goto WHILE_EXP1
label WHILE_END1
push local 6
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
label WHILE_EXP2
push local 1
push argument 1
eq
push local 2
push argument 2
eq
and
not
not
if-goto WHILE_END2
push local 1
push local 3
sub
pop local 1
push local 2
push local 4
sub
pop local 2
push this 4
push local 1
push local 2
push argument 3
call Array2D.set 4
pop temp 0
goto WHILE_EXP2
label WHILE_END2
label IF_FALSE5
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.getResult 4
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 0
lt
not
if-goto WHILE_END1
push this 4
push local 0
push local 1
call Array2D.get 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push constant 1
add
pop local 3
goto IF_END0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
push local 3
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
return
label IF_FALSE1
push local 2
push local 3
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push constant 1
neg
return
function Board.draw 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push this 0
gt
not
not
if-goto WHILE_END0
push this 2
push local 0
push this 1
call Math.multiply 2
add
push this 3
push this 2
push local 0
push this 1
call Math.multiply 2
add
push this 3
push this 0
push this 1
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push this 2
push this 3
push local 0
push this 1
call Math.multiply 2
add
push this 2
push this 0
push this 1
call Math.multiply 2
add
push this 3
push local 0
push this 1
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Board.drawTiles 1
pop temp 0
push pointer 0
push constant 0
call Board.drawBox 2
pop temp 0
push constant 0
return
function Board.drawTiles 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 0
lt
not
if-goto WHILE_END1
push this 4
push local 0
push local 1
call Array2D.get 3
pop local 2
push local 2
push constant 1
neg
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 1
push local 2
call Board.drawTile 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.drawTile 2
push argument 0
pop pointer 0
push pointer 0
push argument 2
call Board.getCenterX 2
pop local 0
push pointer 0
push argument 1
call Board.getCenterY 2
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push this 1
push constant 2
call Math.divide 2
push constant 4
sub
call Screen.drawCircle 3
pop temp 0
push argument 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push this 1
push constant 2
call Math.divide 2
push constant 6
sub
call Screen.drawCircle 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Board.getCenterX 0
push argument 0
pop pointer 0
push this 2
push argument 1
push this 1
call Math.multiply 2
add
push this 1
push constant 2
call Math.divide 2
add
return
function Board.getCenterY 0
push argument 0
pop pointer 0
push this 3
push argument 1
push this 1
call Math.multiply 2
add
push this 1
push constant 2
call Math.divide 2
add
return
function Board.drawBox 4
push argument 0
pop pointer 0
push argument 1
call Screen.setColor 1
pop temp 0
push this 2
push this 6
push this 1
call Math.multiply 2
add
pop local 0
push this 2
push this 6
push constant 1
add
push this 1
call Math.multiply 2
add
pop local 1
push this 3
push this 5
push this 1
call Math.multiply 2
add
pop local 2
push this 3
push this 5
push constant 1
add
push this 1
call Math.multiply 2
add
pop local 3
push local 0
push local 2
push local 3
add
push constant 2
call Math.divide 2
push constant 1
sub
push local 0
push local 2
push local 3
add
push constant 2
call Math.divide 2
push constant 1
add
call Screen.drawLine 4
pop temp 0
push local 1
push local 2
push local 3
add
push constant 2
call Math.divide 2
push constant 1
sub
push local 1
push local 2
push local 3
add
push constant 2
call Math.divide 2
push constant 1
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 1
add
push constant 2
call Math.divide 2
push constant 1
sub
push local 2
push local 0
push local 1
add
push constant 2
call Math.divide 2
push constant 1
add
push local 2
call Screen.drawLine 4
pop temp 0
push local 0
push local 1
add
push constant 2
call Math.divide 2
push constant 1
sub
push local 3
push local 0
push local 1
add
push constant 2
call Math.divide 2
push constant 1
add
push local 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
push this 3
push this 2
push this 0
push this 1
call Math.multiply 2
add
push this 3
push this 0
push this 1
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
